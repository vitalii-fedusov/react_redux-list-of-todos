{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","components/TodoList/TodoList.tsx","app/hooks.ts","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","action","newStatus","newQuery","defaultState","query","status","filterReducer","todosFromAPI","todosReducer","rootReducer","combineReducers","currentTodo","filter","todos","store","createStore","composeWithDevTools","applyMiddleware","thunk","TodoList","handleClick","selectedId","className","map","classNames","id","completed","title","onClick","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoFilter","dispatch","onChange","event","target","value","filterActions","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","user","closeWindow","useState","isLoading","setIsLoading","useEffect","href","email","name","App","selectedTodo","filteredTodos","setFilteredTodos","setUser","setTodo","currTodoActions","todosFromServer","lowerQuery","toLowerCase","includes","getFilteredTodos","response","getTodosActions","a","userId","currentUser","length","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.32e56a07.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype CurrTodoAction = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: CurrTodoAction,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype SetStatusAction = { type: 'currentStatus/SET', payload: Status };\ntype SetQueryAction = { type: 'currentQuery/SET', payload: string };\ntype ClearQueryAction = { type: 'currentQuery/CLEAR' };\n\nconst setStatus = (newStatus: Status): SetStatusAction => ({\n  type: 'currentStatus/SET',\n  payload: newStatus,\n});\n\nconst setQuery = (newQuery: string): SetQueryAction => ({\n  type: 'currentQuery/SET',\n  payload: newQuery,\n});\n\nconst clearQuery = (): ClearQueryAction => ({ type: 'currentQuery/CLEAR' });\n\nexport const actions = { setStatus, setQuery, clearQuery };\n\ntype State = {\n  query: string,\n  status: Status,\n};\n\ntype FilterAction = SetStatusAction | SetQueryAction | ClearQueryAction;\n\nconst defaultState = {\n  query: '',\n  status: 'all' as Status,\n};\n\nconst filterReducer = (\n  state: State = defaultState,\n  action: FilterAction,\n): State => {\n  switch (action.type) {\n    case 'currentStatus/SET':\n      return { ...state, status: action.payload };\n\n    case 'currentQuery/SET':\n      return { ...state, query: action.payload };\n\n    case 'currentQuery/CLEAR':\n      return { ...state, query: '' };\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype GetTodosAction = { type: 'currentTodos/GET', payload: Todo[] };\n\nconst getTodos = (todosFromAPI: Todo[]): GetTodosAction => ({\n  type: 'currentTodos/GET',\n  payload: todosFromAPI,\n});\n\nexport const actions = { getTodos };\n\nconst todosReducer = (\n  state: Todo[] = [],\n  action: GetTodosAction,\n): Todo[] => {\n  switch (action.type) {\n    case 'currentTodos/GET':\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  handleClick: (todo: Todo) => void,\n  selectedId?: number,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  handleClick = () => { },\n  selectedId = 0,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': todo.id === selectedId,\n            })}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                onClick={() => {\n                  handleClick(todo);\n                }}\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n              >\n                <span className=\"icon\">\n                  <i className={classNames('far', {\n                    'fa-eye': todo.id !== selectedId,\n                    'fa-eye-slash': todo.id === selectedId,\n                  })}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","// import { useDispatch } from 'react-redux';\nimport { Status } from '../../types/Status';\nimport { actions as filterActions } from '../../features/filter';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n\n  const setStatus = (newStatus: Status) => {\n    dispatch(filterActions.setStatus(newStatus));\n  };\n\n  const setQuery = (newQuery: string) => {\n    dispatch(filterActions.setQuery(newQuery));\n  };\n\n  const clearQuery = () => dispatch(filterActions.clearQuery());\n\n  const query = useAppSelector(state => state.filter.query);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            onChange={(event) => setStatus(event.target.value as Status)}\n            data-cy=\"statusSelect\"\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          onChange={(event) => setQuery(event.target.value)}\n          value={query}\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              onClick={clearQuery}\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  user: User | null,\n  todo: Todo | null,\n  closeWindow: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  user,\n  todo,\n  closeWindow = () => { },\n}) => {\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 300);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              onClick={closeWindow}\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                todo?.completed\n                  ? (\n                    <strong className=\"has-text-success\">Done</strong>\n                  ) : (\n                    <strong className=\"has-text-danger\">Planned</strong>\n                  )\n              }\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos as uploadFromAPITodos, getUser } from './api';\nimport { Todo } from './types/Todo';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { User } from './types/User';\nimport { Status } from './types/Status';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { actions as currTodoActions } from './features/currentTodo';\nimport { actions as getTodosActions } from './features/todos';\n\nfunction getFilteredTodos(\n  todosFromServer: Todo[],\n  status: Status,\n  query: string,\n) {\n  let filteredTodos = todosFromServer;\n\n  switch (status) {\n    case 'active':\n      filteredTodos = filteredTodos.filter(todo => !todo.completed);\n      break;\n\n    case 'completed':\n      filteredTodos = filteredTodos.filter(todo => todo.completed);\n      break;\n\n    default:\n      filteredTodos = [...filteredTodos];\n  }\n\n  const lowerQuery = query.toLowerCase();\n\n  filteredTodos = filteredTodos.filter(\n    todo => todo.title.toLowerCase().includes(lowerQuery),\n  );\n\n  return filteredTodos;\n}\n\nexport const App: React.FC = () => {\n  const todos = useAppSelector(state => state.todos);\n  const selectedTodo = useAppSelector(state => state.currentTodo);\n  const { status, query } = useAppSelector(state => state.filter);\n  const [filteredTodos, setFilteredTodos] = useState<Todo[]>(todos);\n  const [user, setUser] = useState<User | null>(null);\n\n  const dispatch = useAppDispatch();\n\n  const getTodos = (arrOfTodos: Todo[]) => dispatch(getTodosActions.getTodos(arrOfTodos));\n  const setTodo = (todo: Todo) => dispatch(currTodoActions.setTodo(todo));\n  const removeTodo = () => dispatch(currTodoActions.removeTodo());\n\n  useEffect(() => {\n    setFilteredTodos(getFilteredTodos(todos, status, query));\n  }, [status, query, todos]);\n\n  useEffect(() => {\n    uploadFromAPITodos()\n      .then((response: Todo[]) => getTodos(response));\n  }, []);\n\n  const handleClick = async (todo: Todo) => {\n    setTodo(todo);\n\n    const currentUser = await getUser(todo.userId);\n\n    setUser(currentUser);\n  };\n\n  const closeWindow = () => {\n    removeTodo();\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0\n                ? (\n                  <Loader />\n                ) : (\n                  <TodoList\n                    todos={filteredTodos}\n                    selectedId={selectedTodo?.id}\n                    handleClick={handleClick}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          user={user}\n          todo={selectedTodo}\n          closeWindow={closeWindow}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}